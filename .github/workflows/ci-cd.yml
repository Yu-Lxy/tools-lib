name: CI/CD Pipeline

on:
  push:
    branches: [ main, test, '**' ]
  pull_request:
    branches: [ main, test ]

jobs:
  # CI 检查 - 对所有分支和 PR 运行
  ci-checks:
    runs-on: ubuntu-latest
    if: |
        github.event_name == 'pull_request' ||
        (github.ref != 'refs/heads/main' && github.ref != 'refs/heads/test')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.16.0  # 指定 pnpm 版本，可以省略或改为 latest

      - name: Install and test
        run: |
          pnpm install
          pnpm lint
          pnpm build

# 预览部署 - 仅 test 分支触发
  preview-deploy:
    needs: ci-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test' && github.event_name == 'push'
    # environment: preview
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest
          
      - name: Deploy to Preview  # 预览部署
        run: |
          vercel --token ${{ secrets.VERCEL_TOKEN }} --yes

  # 生产部署 - 仅 main 分支触发
  production-deploy:
    needs: ci-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    # environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest
            
      - name: Deploy to Production  # 生产部署
        run: |
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes