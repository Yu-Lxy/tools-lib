name: Deploy

on:
  push:
    branches: [ main, test ]

jobs:
  preview-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    environment: preview
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.16.0  # 指定 pnpm 版本，可以省略或改为 latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel env (preview)
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build (prebuilt)
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Preview (use prebuilt output)
        run: vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}

  production-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.16.0  # 指定 pnpm 版本，可以省略或改为 latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.19.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Clean previous build artifacts
        run: rm -rf .vercel

      - name: Pull Vercel env (production)
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build (prebuilt)
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Production (use prebuilt output)
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}